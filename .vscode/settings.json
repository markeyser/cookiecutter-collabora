{
    "python.terminal.activateEnvInCurrentTerminal": true,
    "python.defaultInterpreterPath": "/home/codespace/.cache/pypoetry/virtualenvs/cookiecutteraiflock-iRsdtYjO-py3.10",
    "ruff.args": [
        "--config=pyproject.toml",
        "--preview"
    ],
    "ruff.path": [
        "/home/codespace/.cache/pypoetry/virtualenvs/cookiecutteraiflock-iRsdtYjO-py3.10/bin/ruff"
    ],
    "ruff.interpreter": [
        "/home/codespace/.cache/pypoetry/virtualenvs/cookiecutteraiflock-iRsdtYjO-py3.10/bin/python"
    ],
    "terminal.integrated.profiles.windows": {
        "PowerShell": {
            "source": "PowerShell",
            "icon": "terminal-powershell"
        },
        "Command Prompt": {
            "path": [
                "${env:windir}\\Sysnative\\cmd.exe",
                "${env:windir}\\System32\\cmd.exe"
            ],
            "args": [],
            "icon": "terminal-cmd"
        },
        "Git Bash": {
            "path": "C:\\Program Files\\Git\\bin\\bash.exe",
            "args": [],
            "icon": "terminal-bash"
        }
    },
    "terminal.integrated.profiles.linux": {
        "Bash": {
            "path": "/bin/bash",
            "args": [],
            "icon": "terminal-bash"
        },
        "Zsh": {
            "path": "/bin/zsh",
            "args": [],
            "icon": "terminal-zsh"
        }
    },
    "terminal.integrated.profiles.osx": {
        "Bash": {
            "path": "/bin/bash",
            "args": [],
            "icon": "terminal-bash"
        },
        "Zsh": {
            "path": "/bin/zsh",
            "args": [],
            "icon": "terminal-zsh"
        }
    },
    "terminal.integrated.defaultProfile.windows": "Git Bash",
    "terminal.integrated.defaultProfile.linux": "Bash",
    "terminal.integrated.defaultProfile.osx": "Zsh",
    "workbench.colorTheme": "Dracula",
    "workbench.iconTheme": "vscode-icons",
    "workbench.productIconTheme": "Default",
    "autoDocstring.docstringFormat": "google",
    "autoDocstring.includeExtendedSummary": true,
    "autoDocstring.includeName": false,
    "editor.fontSize": 15,
    "terminal.integrated.fontSize": 14,
    "rewrap.wholeComment": false,
    "rewrap.autoWrap.enabled": true,
    "rewrap.reformat": true,
    "rewrap.doubleSentenceSpacing": true,
    "rewrap.wrappingColumn": 72,
    "editor.rulers": [
        72,
        79
    ],
    "[python]": {
        "editor.defaultFormatter": "ms-python.black-formatter",
        "editor.formatOnSave": false
    },
    "jupyter.notebookFileRoot": "${workspaceFolder}",
    "[jupyter]": {
        "editor.formatOnSave": false
    },
    "black-formatter.importStrategy": "fromEnvironment",
    "editor.bracketPairColorization.enabled": true,
    "editor.guides.bracketPairs": false,
    "todohighlight.keywords": [
        {
            "text": "TODO:",
            "color": "black",
            "backgroundColor": "#ffcc00",  // Yellow
            "borderRadius": "2px"
        },
        {
            "text": "FIXME:",
            "color": "black",
            "backgroundColor": "#ff6666",  // Light Red
            "borderRadius": "2px"
        },
        {
            "text": "BUG:",
            "color": "black",
            "backgroundColor": "#ff9933",  // Orange
            "borderRadius": "2px"
        },
        {
            "text": "NOTE:",
            "color": "black",
            "backgroundColor": "#66ccff",  // Light Blue
            "borderRadius": "2px"
        },
        {
            "text": "IDEA:",
            "color": "black",
            "backgroundColor": "#99cc99",  // Light Green
            "borderRadius": "2px"
        },
        {
            "text": "WTF:",
            "color": "black",
            "backgroundColor": "#cc99ff",  // Light Purple
            "borderRadius": "2px"
        },
        {
            "text": "HACK:",
            "color": "black",
            "backgroundColor": "#ffcc99",  // Light Peach
            "borderRadius": "2px"
        }
    ],
    "todo-tree.highlights.customHighlight": {
        "TODO": {
            "foreground": "black",
            "background": "#ffcc00",  // Yellow
            "icon": "check"
        },
        "FIXME": {
            "foreground": "black",
            "background": "#ff6666",  // Light Red
            "icon": "alert"
        },
        "BUG": {
            "foreground": "black",
            "background": "#ff9933",  // Orange
            "icon": "bug"
        },
        "NOTE": {
            "foreground": "black",
            "background": "#66ccff",  // Light Blue
            "icon": "info"
        },
        "IDEA": {
            "foreground": "black",
            "background": "#99cc99",  // Light Green
            "icon": "lightbulb"
        },
        "WTF": {
            "foreground": "black",
            "background": "#cc99ff",  // Light Purple
            "icon": "question"
        },
        "HACK": {
            "foreground": "black",
            "background": "#ffcc99",  // Light Peach
            "icon": "wrench"
        }
    },
    "todo-tree.regex.regex": "((//|#|<!--|;|/\\*|^)\\s*($TAGS))",
    "todo-tree.general.tags": [
        "TODO",
        "FIXME",
        "BUG",
        "NOTE",
        "IDEA",
        "WTF",
        "HACK"
    ],
    "todo-tree.tree.showCountsInTree": true,
    "todo-tree.tree.scanMode": "workspace",
    "todo-tree.tree.autoRefresh": true,
    "todo-tree.tree.sortTagsOnlyViewAlphabetically": true,
    "todohighlight.include": [
        "**/*.js",
        "**/*.jsx",
        "**/*.ts",
        "**/*.tsx",
        "**/*.html",
        "**/*.php",
        "**/*.css",
        "**/*.scss",
        "**/*.py"
    ],
    "todohighlight.exclude": [
        "**/node_modules/**",
        "**/bower_components/**",
        "**/dist/**",
        "**/build/**",
        "**/.vscode/**",
        "**/.github/**",
        "**/_output/**",
        "**/*.min.*",
        "**/*.map",
        "**/.next/**"
    ],
    "todohighlight.defaultStyle": {},
    "files.associations": {
        ".gitignore": "bat"
    },
    "github-enterprise.uri": "https://git.nylcloud.com/",
    "terminal.integrated.tabs.defaultColor": null,
    "cSpell.language": "en",
    "cSpell.maxNumberOfProblems": 100,
    "cSpell.numSuggestions": 8,
    "cSpell.minWordLength": 4,
    "cSpell.enabledLanguageIds": [
        "csharp",
        "go",
        "javascript",
        "javascriptreact",
        "markdown",
        "php",
        "plaintext",
        "typescript",
        "typescriptreact",
        "yml",
        "python",
        "R"
    ],
    "cSpell.enabled": true,
    "cSpell.showStatus": true,
    "cSpell.words": [
        "autoflake"
    ],
    "cSpell.allowCompoundWords": false,
    "cSpell.ignoreWords": [
        "behaviour"
    ],
    "cSpell.userWords": [
        "arange",
        "iloc",
        "interquartile",
        "lineplot",
        "subseting",
        "yhat",
        "astype",
        "bytree",
        "cnty",
        "colsample",
        "colwidth",
        "dataframe",
        "dateutil",
        "dtype",
        "finfo",
        "fips",
        "grps",
        "isin",
        "isort",
        "joblib",
        "mamimo",
        "MAPE",
        "matplotlib",
        "nonbrand",
        "nthread",
        "pyplot",
        "rcvm",
        "rcvq",
        "relativedelta",
        "RMSE",
        "savefig",
        "scikit",
        "scipy",
        "shap",
        "SHAP",
        "Shapley",
        "sklearn",
        "softmax",
        "statsmodels",
        "tweedie",
        "xgboost"
    ],
    "cSpell.ignorePaths": [
        "node_modules",
        "**/node_modules",
        "**/node_modules/**",
        "node_modules/**",
        "vscode-extension",
        ".git",
        "*.dll",
        "**/*.dll"
    ],
    "cSpell.flagWords": [
        "hte"
    ],
    "cSpell.spellCheckDelayMs": 50,
    "[markdown]": {
        "editor.quickSuggestions": {
            "other": true,
            "comments": true,
            "strings": true
        }
    },
    "markdownlint.config": {
        "MD046": false,
        "MD033": false
    },
    "redhat.telemetry.enabled": false,
    "notebook.markup.fontSize": 16,
    "notebook.output.wordWrap": true,
    "notebook.formatOnCellExecution": false,
    "notebook.formatOnSave.enabled": false,
    "workbench.editorAssociations": {
        "*.m4a": "wavPreview.audioPreview",
        "*.md": "default"
    },
    "code-runner.executorMap": {
        "javascript": "node",
        "java": "cd $dir && javac $fileName && java $fileNameWithoutExt",
        "c": "cd $dir && gcc $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "cpp": "cd $dir && g++ $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "objective-c": "cd $dir && gcc -framework Cocoa $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "php": "php",
        "python": "\"$pythonPath\" $fullFileName"
    },
    "peacock.remoteColor": "#1857a4",
    "workbench.colorCustomizations": {
        "activityBar.activeBackground": "#1f6fd0",
        "activityBar.background": "#1f6fd0",
        "activityBar.foreground": "#e7e7e7",
        "activityBar.inactiveForeground": "#e7e7e799",
        "activityBarBadge.background": "#ee90bb",
        "activityBarBadge.foreground": "#15202b",
        "commandCenter.border": "#e7e7e799",
        "sash.hoverBorder": "#1f6fd0",
        "statusBar.background": "#1857a4",
        "statusBar.foreground": "#e7e7e7",
        "statusBarItem.hoverBackground": "#1f6fd0",
        "statusBarItem.remoteBackground": "#1857a4",
        "statusBarItem.remoteForeground": "#e7e7e7",
        "titleBar.activeBackground": "#1857a4",
        "titleBar.activeForeground": "#e7e7e7",
        "titleBar.inactiveBackground": "#1857a499",
        "titleBar.inactiveForeground": "#e7e7e799"
    },
    "peacock.color": "#1857a4",
    "CodeGPT.apiKey": "OpenAI",
    "files.exclude": {
        "**/.git": false,
        "**/.svn": true,
        "**/.hg": true,
        "**/CVS": true,
        "**/.DS_Store": true,
        "**/Thumbs.db": true,
        "**/*.crswap": true
    },
    "mypy-type-checker.args": [
        "--config-file=pyproject.toml"
    ],
    "mypy-type-checker.cwd": "${workspaceFolder}",
    "mypy-type-checker.importStrategy": "fromEnvironment",
    "mypy-type-checker.preferDaemon": true,
    "mypy-type-checker.reportingScope": "workspace",
}